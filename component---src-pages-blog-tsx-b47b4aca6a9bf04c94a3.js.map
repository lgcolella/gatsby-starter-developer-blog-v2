{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/button/button.tsx","webpack:///./src/components/button/index.ts","webpack:///./src/components/archive-pagination/archive-pagination.tsx"],"names":["query","IndexPage","data","title","description","Config","siteDescription","path","posts","allMarkdownRemark","edges","nextPage","style","require","Button","children","to","buttonStyle","className","button","defaultProps","ArchivePagination","prevPage","container","Utils","resolveUrl","pages","archive","toString","buttonLeft","Lang","components","archivePagination","newerPostsButton","buttonRight","olderPostsButton"],"mappings":"0FAAA,qHAoBaA,EAAQ,aAwDNC,UAhEG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,YAAaC,IAAOC,gBAAiBC,KAAK,KAC5D,kBAAC,IAAD,CAAUC,MAAON,EAAKO,kBAAkBC,QACxC,kBAAC,IAAD,CAAmBC,SAAU,O,6DCX3BC,EAAQC,EAAQ,KAEhBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,YAAjB,OACb,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,UAAcN,EAAMO,OAAX,IAAqBF,GACzCF,IAULD,EAAOM,aAAe,CACpBH,YAAa,IASAH,QC7Bf,mC,0HCSMF,EAAQC,EAAQ,KAoCPQ,IAlCW,SAAC,GAAD,IACxBC,EADwB,EACxBA,SACAX,EAFwB,EAExBA,SAFwB,OAOxB,yBAAKO,UAAWN,EAAMW,WACnBD,EACC,kBAAC,IAAD,CACEN,GAAIQ,IAAMC,WAAWpB,IAAOqB,MAAMC,QAASL,EAASM,YACpDX,YAAaL,EAAMiB,YAEnB,kBAAC,IAAD,MACA,8BAAOC,IAAKC,WAAWC,kBAAkBC,mBAEzC,KACHtB,EACC,kBAAC,IAAD,CACEK,GAAIQ,IAAMC,WAAWpB,IAAOqB,MAAMC,QAAShB,EAASiB,YACpDX,YAAaL,EAAMsB,aAEnB,8BAAOJ,IAAKC,WAAWC,kBAAkBG,kBACzC,kBAAC,IAAD,OAEA","file":"component---src-pages-blog-tsx-b47b4aca6a9bf04c94a3.js","sourcesContent":["/* Vendor imports */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n/* App imports */\r\nimport { ChildImageSharpFluid, AvailableTag } from '../types'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport PostList from '../components/post-list'\r\nimport ArchivePagination from '../components/archive-pagination/archive-pagination'\r\nimport Config from '../../config'\r\n\r\nconst IndexPage = ({ data }: Props) => (\r\n  <Layout>\r\n    <SEO title='Blog' description={Config.siteDescription} path='' />\r\n    <PostList posts={data.allMarkdownRemark.edges} />\r\n    <ArchivePagination nextPage={2} />\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { fileAbsolutePath: { regex: \"/index.md$/\" } }\r\n      limit: 5\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            path\r\n            title\r\n            tags\r\n            excerpt\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600) {\r\n                  ...GatsbyImageSharpFluid_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nIndexPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n}\r\n\r\ninterface Props {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: Array<{\r\n        node: {\r\n          frontmatter: {\r\n            title: string\r\n            path: string\r\n            tags: AvailableTag[]\r\n            excerpt: string\r\n            cover: {\r\n              childImageSharp: ChildImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }>\r\n    }\r\n  }\r\n}\r\n\r\nexport default IndexPage\r\n","/* Vendor imports */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n/* App imports */\r\nconst style = require('./button.module.less')\r\n\r\nconst Button = ({ children, to, buttonStyle }: Props) => (\r\n  <Link to={to} className={`${style.button} ${buttonStyle}`}>\r\n    {children}\r\n  </Link>\r\n)\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  buttonStyle: PropTypes.string,\r\n}\r\n\r\nButton.defaultProps = {\r\n  buttonStyle: '',\r\n}\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  to: string\r\n  buttonStyle?: string\r\n}\r\n\r\nexport default Button\r\n","export { default } from './button'\r\n","/* Vendor imports */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\r\n/* App imports */\r\nimport Button from '../../components/button'\r\nimport Config from '../../../config'\r\nimport Utils from '../../utils'\r\nimport Lang from '../../i18n/default'\r\nconst style = require('./archive-pagination.module.less')\r\n\r\nconst ArchivePagination = ({\r\n  prevPage,\r\n  nextPage,\r\n}: {\r\n  prevPage?: number\r\n  nextPage?: number\r\n}) => (\r\n  <div className={style.container}>\r\n    {prevPage ? (\r\n      <Button\r\n        to={Utils.resolveUrl(Config.pages.archive, prevPage.toString())}\r\n        buttonStyle={style.buttonLeft}\r\n      >\r\n        <FaArrowLeft />\r\n        <span>{Lang.components.archivePagination.newerPostsButton}</span>\r\n      </Button>\r\n    ) : null}\r\n    {nextPage ? (\r\n      <Button\r\n        to={Utils.resolveUrl(Config.pages.archive, nextPage.toString())}\r\n        buttonStyle={style.buttonRight}\r\n      >\r\n        <span>{Lang.components.archivePagination.olderPostsButton}</span>\r\n        <FaArrowRight />\r\n      </Button>\r\n    ) : null}\r\n  </div>\r\n)\r\n\r\nArchivePagination.propTypes = {\r\n  prevPage: PropTypes.number,\r\n  nextPage: PropTypes.number,\r\n}\r\n\r\nexport default ArchivePagination\r\n"],"sourceRoot":""}